name: worker01
services:
  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    environment:
      - CADDY_INGRESS_NETWORK=caddy
    networks:
      - caddy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2019/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  populateTransferEvents:
    container_name: populateTransferEvents
    image: registry.digitalocean.com/hexlive/liquidity-finder:latest
    restart: unless-stopped
    volumes:
      - /opt/.env:/opt/.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      options:
        max-size: "10m"
    command: /app/cmd/start populateTransferEvents

  processTokenAmounts:
    container_name: processTokenAmounts
    image: registry.digitalocean.com/hexlive/liquidity-finder:latest
    restart: unless-stopped
    volumes:
      - /opt/.env:/opt/.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      options:
        max-size: "10m"
    command: /app/cmd/start processTokenAmounts

  gatherPairs:
    container_name: gatherPairs
    image: registry.digitalocean.com/hexlive/liquidity-finder:latest
    restart: unless-stopped
    volumes:
      - /opt/.env:/opt/.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      options:
        max-size: "10m"
    command: /app/cmd/start gatherPairs

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly
    ports:
      - "6379:6379"
    ulimits:
      memlock: -1
    volumes:
      - /root/dev/caddy/dragonfly-data:/data
    command: >
      --maxmemory 1g
      --dir /data
      --snapshot_cron "0 1 * * *"
      --requirepass ${DRAGONFLY_PASSWORD}
    restart: unless-stopped
    networks:
      - caddy

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    expose:
      - 9000
    networks:
      - caddy

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:1.5.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --include-stopped --interval 30 -v populateTransferEvents processTokenAmounts gatherPairs
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
volumes:
  pgdata:
  caddy-data:
  caddy-config:
  portainer_data:

networks:
  caddy:
    external: true
