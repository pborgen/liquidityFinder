name: db01
services:
  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${PWD}/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    environment:
      - CADDY_INGRESS_NETWORK=caddy
    networks:
      - caddy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2019/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    container_name: postgres
    image: postgres:17
    shm_size: '8gb'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL_CERT_FILE: /var/lib/postgresql/server.crt
      POSTGRES_SSL_KEY_FILE: /var/lib/postgresql/server.key
    ports:
      - "5432:5432"
    volumes:
      - ${DB_DATA_DIR}:/var/lib/postgresql/data
      - /root/dev/caddy/certs:/var/lib/postgresql/certs
      - ${PWD}/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command: >
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
      -c ssl_key_file=/var/lib/postgresql/certs/server.key
      -c shared_buffers=8GB
      -c work_mem=128MB
      -c effective_cache_size=24GB
      -c maintenance_work_mem=1GB
      -c checkpoint_timeout=15min
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c wal_level=minimal
      -c wal_compression=on
      -c max_parallel_workers_per_gather=12
      -c max_parallel_workers=16
      -c random_page_cost=1.1 -c seq_page_cost=1.0
      -c min_wal_size=2GB 
      -c max_wal_size=16GB
      -c max_wal_senders=0
      -c shared_preload_libraries=pg_prewarm
      -c synchronous_commit=off
      -c fsync=off

    restart: unless-stopped
    depends_on:
      - caddy
    networks:
      - caddy

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    environment:
      - AGENT_SECRET=${PORTAINER_AGENT_SECRET}
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    expose:
      - 9000
    networks:
      - caddy
    depends_on:
      - caddy

volumes:
  caddy-data:
  caddy-config:
  portainer_data:

networks:
  caddy:
    external: true
