services:
  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "<Password>"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /root/dev/caddy/certs/server.crt:/var/lib/postgresql/data/server.crt
      - /root/dev/caddy/certs/server.key:/var/lib/postgresql/data/server.key
    command: >
      -c ssl=on
    restart: unless-stopped
    networks:
      - caddy
  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    environment:
      - CADDY_INGRESS_NETWORK=caddy
    networks:
      - caddy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2019/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  watchtower:
    image: containrrr/watchtower:1.5.3
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      --include-stopped --interval 30 --log-opt max-size=100m -v /root/.docker/config.json:/config.json liquidity-finder  # Only watch these containers
    restart: unless-stopped
    networks:
      - caddy

  liquidity-finder:
    container_name: liquidity-finder
    image: registry.digitalocean.com/hexlive/liquidity-finder:latest
    restart: unless-stopped
    volumes:
      - /opt/.env:/opt/.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging:
      options:
        max-size: "10m"
    command: /app/cmd/start populateTransferEvents

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly
    ports:
      - "6379:6379"
    ulimits:
      memlock: -1
    volumes:
      - /root/dev/caddy/dragonfly-data:/data
    command: >
      --maxmemory 2g
      --dir /data
      --snapshot_cron "0 1 * * *"
    restart: unless-stopped
    networks:
      - caddy


volumes:
  pgdata:
  caddy-data:
  caddy-config:

networks:
  caddy:
    external: true
