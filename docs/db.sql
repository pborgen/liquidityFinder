

CREATE TABLE ACCOUNT(
    ACCOUNT_ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(150) NOT NULL,
    PUBLIC_KEY VARCHAR(100) NOT NULL,
    PRIVATE_KEY VARCHAR(350) NOT NULL,
    IS_ACTIVE BOOLEAN DEFAULT FALSE NOT NULL,
    UNIQUE(ACCOUNT_ID)
);

CREATE TABLE NETWORK (
     NETWORK_ID SERIAL PRIMARY KEY,
     NAME VARCHAR(50) NOT NULL,
     CHAIN_ID INT NOT NULL,
     CURRENCY_SYMBOL VARCHAR(10) NOT NULL,
     BLOCK_EXPLORER_URL VARCHAR(150) NOT NULL,
     BASE_TOKEN_CONTRACT_ADDRESS VARCHAR(100) NOT NULL,
     UNIQUE(NETWORK_ID)
);

INSERT INTO NETWORK(NETWORK_ID, NAME, CHAIN_ID, CURRENCY_SYMBOL, BLOCK_EXPLORER_URL, BASE_TOKEN_CONTRACT_ADDRESS) VALUES
    (1, 'PulseChain_Network', 369, 'tPLS', 'https://rpc.pulsechain.com', '0xa1077a294dde1b09bb078844df40758a5d0f9a27'),
    -- ETHEREUM
    (10, 'Ethereum_Mainnet', 1, 'ETH', 'https://etherscan.io', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),

    (11, 'Kovan_Test_Network', 42, 'ETH', 'https://kovan.etherscan.io', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),
    (12, 'Goerli_Test_Network', 5, 'ETH', 'https://goerli.etherscan.io', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),
    (13, 'Ropsten_Test_Network', 3, 'ETH', 'https://ropsten.etherscan.io', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),
    (14, 'Rinkeby_Test_Network', 4, 'ETH', 'https://rinkeby.etherscan.io', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'),

    (40, 'BNB_CHAIN_mainnet', 56, 'BNB', 'https://bscnode1.anyswap.exchange', '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'),


    (100, 'MATIC_MAINNET', 137, 'MATIC', 'https://explorer.matic.network', '');


CREATE TABLE ERC20 (
   ERC20_ID SERIAL PRIMARY KEY,
   NETWORK_ID SMALLINT NOT NULL,
   CONTRACT_ADDRESS VARCHAR(80) UNIQUE NOT NULL,
   NAME VARCHAR(150) NOT NULL,
   SYMBOL VARCHAR(150) NOT NULL,
   DECIMAL SMALLINT NOT NULL,
   SHOULD_FIND_ARB BOOLEAN DEFAULT FALSE NOT NULL,
   IS_VALIDATED BOOLEAN DEFAULT FALSE NOT NULL,
   IS_TAX_TOKEN BOOLEAN DEFAULT FALSE NOT NULL,
   TAX_PERCENTAGE NUMERIC(14, 5),
   PROCESSED_IS_TAX_TOKEN BOOLEAN DEFAULT FALSE NOT NULL,
   SYMBOL_IMAGE_URL VARCHAR(200),
   CONSTRAINT FK_NETWORK
       FOREIGN KEY(NETWORK_ID)
           REFERENCES NETWORK(NETWORK_ID),
   UNIQUE(ERC20_ID)
);

CREATE TABLE DEX (
                     DEX_ID SERIAL PRIMARY KEY,
                     NAME VARCHAR(50) NOT NULL UNIQUE,
                     NETWORK_ID SMALLINT NOT NULL,
                     ROUTER_ADDRESS VARCHAR(100) NOT NULL,
                     FACTORY_ADDRESS VARCHAR(100) NOT NULL,
                     FACTORY_ABI TEXT DEFAULT '',
                     ROUTER_ABI TEXT DEFAULT '',
                     FEE_BASIS_POINTS SMALLINT DEFAULT 0,
                     DEX_TYPE SMALLINT DEFAULT 0,
                     
                     CONSTRAINT FK_NETWORK
                         FOREIGN KEY(NETWORK_ID)
                             REFERENCES NETWORK(NETWORK_ID),
                     UNIQUE(DEX_ID)
);

INSERT INTO DEX(DEX_ID, NETWORK_ID, NAME, ROUTER_ADDRESS, FACTORY_ADDRESS, FEE_BASIS_POINTS, DEX_TYPE) VALUES
      (1, 1, 'PulseChain_Network_Uniswap_V2', '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', 997, 1),
      (2, 1, 'PulseChain_Network_SushiSwap_V2', '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F', '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac', 997, 1),
      (3, 1, 'PulseChain_Network_PulseX_V1', '0x98bf93ebf5c380C0e6Ae8e192A7e2AE08edAcc02', '0x1715a3E4A142d8b698131108995174F37aEBA10D', 997, 1),
      (4, 1, 'PulseChain_Network_PulseX_V2', '0x165C3410fC91EF562C50559f7d2289fEbed552d9', '0x29ea7545def87022badc76323f373ea1e707c523', 997, 1),
      (5, 1, 'PulseChain_ShibaSwap', '0x03f7724180AA6b939894B5Ca4314783B0b36b329', '0x115934131916C8b277DD010Ee02de363c09d037c', 997, 1),
      (6, 1, '9mm_v2', '0xcC73b59F8D7b7c532703bDfea2808a28a488cF47', '0x3a0Fa7884dD93f3cd234bBE2A0958Ef04b05E13b', 997, 1),
      (7, 1, '9inch_v2', '0xeB45a3c4aedd0F47F345fB4c8A1802BB5740d725', '0x5b9F077A77db37F3Be0A5b5d31BAeff4bc5C0bD7', 997, 1),
      (8, 1, 'SparkSwap', '0x76C08825b4A675FD6a17A244660BabeB4ADA79d5', '0x955219A87eB0C6754fd247266af970F7d16906CD', 0, 1),
      (9, 1, 'PulseRate', '0x71bb8a2feD36aa2dEa9f8f9Cb43E038315Dd7ba3', '0xE2332E5297b18a21DcE0E6ac461e821C353A00cA', 0, 1),
      (10, 1, 'Ezswap', '0x05d5F20500eD8d9E012647E6CFe1b2Bf89f5b926', '0xbeE82c502eC48a962510Aa4505595259C3ba631f', 0, 1),


      (20, 10, 'Ethereum_Mainnet_Uniswap_V2', '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'),
      (21, 10, 'Ethereum_Mainnet_SushiSwap_V2', '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F', '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac'),

      (30, 11, 'Kovan_Test_Network_Uniswap_V2', '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'),


      (50, 40, 'BNB_CHAIN_mainnet_PancakeSwap_V2',  '0x10ED43C718714eb63d5aA57B78B54704E256024E', '0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73'),
      (51, 40, 'BNB_CHAIN_mainnet_BiSwap_V2',  '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8', '0x858E3312ed3A876947EA49d572A7C42DE08af7EE'),
      (52, 40, 'BNB_CHAIN_mainnet_ApeSwap_V2',  '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7', '0x0841BD0B734E4F5853f0dD8d7Ea041c241fb0Da6'),

      (100, 100, 'MATIC_QUICKSWAP_V2',  '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff', '0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32');

CREATE TABLE PAIR(
    PAIR_ID                     SERIAL               PRIMARY KEY,
    DEX_ID                      INTEGER               NOT NULL,
    PAIR_INDEX                  INTEGER               NOT NULL,
    TOKEN0_ID                   INTEGER               NOT NULL,
    TOKEN1_ID                   INTEGER               NOT NULL,
    TOKEN0_ADDRESS              VARCHAR(100) NOT NULL,
    TOKEN1_ADDRESS              VARCHAR(100) NOT NULL,
    PAIR_CONTRACT_ADDRESS       VARCHAR(100) NOT NULL,
    TOKEN0_RESERVES             NUMERIC(78, 0),
    TOKEN1_RESERVES             NUMERIC(78, 0),
    SHOULD_FIND_ARB             BOOLEAN DEFAULT FALSE NOT NULL,
    HAS_TAX_TOKEN               BOOLEAN DEFAULT TRUE NOT NULL,
    IS_PLS_PAIR                 BOOLEAN DEFAULT FALSE NOT NULL,
    IS_HIGH_LIQUIDITY           BOOLEAN DEFAULT FALSE NOT NULL,
    UNISWAP_V3_FEE              NUMERIC(78, 0) DEFAULT 0,
    UNISWAP_V3_TICK_SPACINGS    NUMERIC(78, 0) DEFAULT 0,
    INSERTED_AT                 TIMESTAMP DEFAULT NOW() NOT NULL,
    LAST_UPDATED                TIMESTAMP DEFAULT NOW() NOT NULL,
    LAST_TIME_RESERVES_UPDATED  TIMESTAMP DEFAULT '1970-01-01 00:00:00',
    
    UNIQUE(PAIR_CONTRACT_ADDRESS),
    CONSTRAINT FK_DEX
        FOREIGN KEY (DEX_ID)
            REFERENCES DEX (DEX_ID),
    CONSTRAINT FK_ERC20_0
        FOREIGN KEY (TOKEN0_ID)
            REFERENCES ERC20 (ERC20_ID),
    CONSTRAINT FK_ERC20_1
        FOREIGN KEY (TOKEN1_ID)
            REFERENCES ERC20 (ERC20_ID),
    UNIQUE (PAIR_ID)
);

CREATE INDEX IDX_PAIR_PAIR_CONTRACT_ADDRESS ON PAIR (PAIR_CONTRACT_ADDRESS);
CREATE INDEX IDX_PAIR_TOKEN0_ID ON PAIR (TOKEN0_ID);
CREATE INDEX IDX_PAIR_TOKEN1_ID ON PAIR (TOKEN1_ID);
CREATE INDEX IDX_PAIR_TOKEN0_ADDRESS ON PAIR (TOKEN0_ADDRESS);
CREATE INDEX IDX_PAIR_TOKEN1_ADDRESS ON PAIR (TOKEN1_ADDRESS);
CREATE INDEX IDX_PAIR_IS_PLS_PAIR ON PAIR (IS_PLS_PAIR);
CREATE INDEX IDX_PAIR_IS_HIGH_LIQUIDITY ON PAIR (IS_HIGH_LIQUIDITY);
CREATE INDEX IDX_PAIR_SHOULD_FIND_ARB ON PAIR (SHOULD_FIND_ARB);
CREATE INDEX IDX_PAIR_INSERTED_AT ON PAIR (INSERTED_AT);
CREATE INDEX IDX_PAIR_LAST_UPDATED ON PAIR (LAST_UPDATED);




CREATE TABLE NAME_VALUE (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL UNIQUE,
    VALUE VARCHAR(100) NOT NULL,
    DATA_TYPE SMALLINT NOT NULL,
    UNIQUE(NAME),
    UNIQUE(ID)
);

CREATE TABLE TRANSFER_EVENT (
    ID SERIAL PRIMARY KEY,
    BLOCK_NUMBER BIGINT NOT NULL,
    TRANSACTION_HASH VARCHAR(67) NOT NULL,
    LOG_INDEX INT NOT NULL,
    CONTRACT_ADDRESS BYTEA NOT NULL,
    FROM_ADDRESS BYTEA NOT NULL,
    TO_ADDRESS BYTEA NOT NULL,
    EVENT_VALUE NUMERIC(78, 0) NOT NULL,
    UNIQUE(ID),
    UNIQUE(BLOCK_NUMBER, LOG_INDEX)

);
CREATE INDEX IDX_TRANSFER_EVENT_BLOCK_NUMBER ON TRANSFER_EVENT (BLOCK_NUMBER);
CREATE INDEX IDX_TRANSFER_EVENT_FROM ON TRANSFER_EVENT (FROM_ADDRESS);
CREATE INDEX IDX_TRANSFER_EVENT_TO ON TRANSFER_EVENT (TO_ADDRESS);

CREATE VIEW transfer_event_view AS
SELECT 
    id,
    block_number,
    transaction_hash,
    log_index,
    '0x' || encode(contract_address, 'hex') AS contract_address,
    '0x' || encode(from_address, 'hex') AS from_address,
    '0x' || encode(to_address, 'hex') AS to_address,
    event_value

FROM transfer_event;

CREATE TABLE TOKEN_AMOUNT (
    ID SERIAL PRIMARY KEY,
    TOKEN_ADDRESS BYTEA NOT NULL,
    OWNER_ADDRESS BYTEA NOT NULL,
    AMOUNT NUMERIC(78, 0) NOT NULL,
    LAST_BLOCK_NUMBER_UPDATED BIGINT NOT NULL,
    LAST_LOG_INDEX_UPDATED INT NOT NULL,
    UNIQUE(ID),
    UNIQUE(TOKEN_ADDRESS, OWNER_ADDRESS)
);

CREATE INDEX IDX_TOKEN_AMOUNT_TOKEN_ADDRESS ON TOKEN_AMOUNT (TOKEN_ADDRESS);
CREATE INDEX IDX_TOKEN_AMOUNT_OWNER_ADDRESS ON TOKEN_AMOUNT (OWNER_ADDRESS);
CREATE INDEX IDX_TOKEN_AMOUNT_LAST_BLOCK_NUMBER_UPDATED ON TOKEN_AMOUNT (LAST_BLOCK_NUMBER_UPDATED);
CREATE VIEW token_amount_view AS
SELECT 
    id,
    '0x' || encode(token_address, 'hex') AS token_address,
    '0x' || encode(owner_address, 'hex') AS owner_address,
    amount,
    last_block_number_updated,
    last_log_index_updated
FROM token_amount;
